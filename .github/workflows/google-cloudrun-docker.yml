name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: 'Create env file'
        run: |
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo DATASET=${{ secrets.DATASET }} >> .env
          echo CLOUD_STORAGE=${{ secrets.CLOUD_STORAGE }} >> .env
          echo MODEL_1=${{ secrets.MODEL_1 }} >> .env
          echo MODEL_2=${{ secrets.MODEL_2 }} >> .env
          echo MODEL_3=${{ secrets.MODEL_3 }} >> .env
          echo MODEL_4=${{ secrets.MODEL_4 }} >> .env

      - name: 'Download models and dataset'
        run: |
          python - <<EOF
          import os
          import requests

          urls = {
              "dataset_fix.csv": "https://storage.googleapis.com/nimbus-model/dataset_fix.csv",
              "model_wisata_popularity_improved.keras": "https://storage.googleapis.com/nimbus-model/model_wisata_popularity_improved.keras",
              "model_wisata_recommendation.keras": "https://storage.googleapis.com/nimbus-model/model_wisata_recommendation.keras",
              "tensorflow_wisata_model_with_predictions.keras": "https://storage.googleapis.com/nimbus-model/tensorflow_wisata_model_with_predictions.keras",
              "generative_model_genai.keras": "https://storage.googleapis.com/nimbus-model/generative_model_genai.keras"
          }
          target_dir = os.path.join(os.getcwd(), "model")

          os.makedirs(target_dir, exist_ok=True)

          for filename, url in urls.items():
              local_path = os.path.join(target_dir, filename)
              print(f"Downloading...")
              response = requests.get(url, stream=True)
              if response.status_code == 200:
                  with open(local_path, "wb") as f:
                      for chunk in response.iter_content(chunk_size=1024):
                          f.write(chunk)
              else:
                  print(f"Failed to download. Status code: {response.status_code}")

          print("Download completed!")
          EOF

      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/${{ secrets.SERVICE }}:latest"
          docker build --tag "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"

  deploy:
    needs: build
    runs-on: 'ubuntu-latest'

    steps:
      - name: Google Cloud Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.SERVICE }} \
            --image ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.SERVICE }}/${{ secrets.SERVICE }}:latest \
            --platform managed \
            --region ${{ secrets.REGION }} \
            --allow-unauthenticated
